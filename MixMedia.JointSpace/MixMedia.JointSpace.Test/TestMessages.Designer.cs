//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MixMedia.JointSpace.Test {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TestMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TestMessages() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MixMedia.JointSpace.Test.TestMessages", typeof(TestMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///	&quot;layer1&quot;: {
        ///		&quot;left&quot;: {
        ///			&quot;0&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;1&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;2&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;3&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			}
        ///		},
        ///		&quot;top&quot;: {
        ///			&quot;0&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;1&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;2&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;3&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;4&quot;: {
        ///				&quot;r [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AmbilightCached {
            get {
                return ResourceManager.GetString("AmbilightCached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///	&quot;layer1&quot;: {
        ///		&quot;left&quot;: {
        ///			&quot;0&quot;: {
        ///				&quot;r&quot;: 7,
        ///				&quot;g&quot;: 6,
        ///				&quot;b&quot;: 7
        ///			},
        ///			&quot;1&quot;: {
        ///				&quot;r&quot;: 13,
        ///				&quot;g&quot;: 11,
        ///				&quot;b&quot;: 13
        ///			},
        ///			&quot;2&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;3&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			}
        ///		},
        ///		&quot;top&quot;: {
        ///			&quot;0&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;1&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;2&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;3&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;4&quot;: {
        ///			 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AmbilightMeasured {
            get {
                return ResourceManager.GetString("AmbilightMeasured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///	&quot;current&quot;: &quot;internal&quot;
        ///} ähnelt.
        /// </summary>
        internal static string AmbilightMode {
            get {
                return ResourceManager.GetString("AmbilightMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///	&quot;layer1&quot;: {
        ///		&quot;left&quot;: {
        ///			&quot;0&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;1&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;2&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;3&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			}
        ///		},
        ///		&quot;top&quot;: {
        ///			&quot;0&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;1&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;2&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;3&quot;: {
        ///				&quot;r&quot;: 0,
        ///				&quot;g&quot;: 0,
        ///				&quot;b&quot;: 0
        ///			},
        ///			&quot;4&quot;: {
        ///				&quot;r [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AmbilightProcessed {
            get {
                return ResourceManager.GetString("AmbilightProcessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///	&quot;layers&quot;: 1,
        ///	&quot;left&quot;: 4,
        ///	&quot;top&quot;: 9,
        ///	&quot;right&quot;: 4,
        ///	&quot;bottom&quot;: 0
        ///} ähnelt.
        /// </summary>
        internal static string AmbilightTopology {
            get {
                return ResourceManager.GetString("AmbilightTopology", resourceCulture);
            }
        }
    }
}
